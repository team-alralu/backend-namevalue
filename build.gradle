plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version "3.3.2"
    id 'com.ewerk.gradle.plugins.querydsl'version '1.0.10'
    id "org.sonarqube" version "4.3.0.3225"
    id 'jacoco'
}

group 'com.sk.namevalue'
version '1.0-SNAPSHOT'


java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt //asciidoc 설정 종속성 추가
    querydsl.extendsFrom compileClasspath
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // lombok
    annotationProcessor 'org.projectlombok:lombok'

    // h2
    runtimeOnly 'com.h2database:h2'

    // Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Asciidoctor (.adoc)
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // Restdocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // test
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

bootJar{
    dependsOn asciidoctor // jar 빌드 되기 전 asciidoctor task 실행
    from ("${asciidoctor.outputDir}/html5"){ // 생성된 문서를 jar/static/docs 디렉토리에 복사
        into 'static/docs'
    }
}

sonar {
    properties {
        property("sonar.token", "squ_872977241d8b76a795e8404c620f0b8801030694")
        property("sonar.host.url", "http://172.30.1.5:9000")
        property("sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml") // jacoco xml 파일 위치
    }
}

jacocoTestReport {
    reports {
        // 원하는 리포트를 켜고 끌 수 있습니다.
        html.enabled true
        xml.enabled true
        csv.enabled false
    }
}